{"ast":null,"code":"var _jsxFileName = \"/Users/pablorodrigues/Downloads/PAGINA INTERATIVO - D90/PAGINA-INTERATIVA-90/src/pages/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport ProgressCard from '../components/cards/ProgressCard';\nimport MedalsCard, { defaultMedals } from '../components/cards/MedalsCard';\nimport MotivationCard from '../components/cards/MotivationCard';\nimport SuccessStoriesCard from '../components/cards/SuccessStoriesCard';\nimport CelebrationCard from '../components/cards/CelebrationCard';\nimport '../styles/futuristic.css';\nimport '../styles/dashboard.css';\nimport '../styles/cards.css';\nimport '../styles/animations.css';\n\n// Componente principal do Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  // Estados para os formulários de registro\n  const [sleepHours, setSleepHours] = useState('');\n  const [waterIntake, setWaterIntake] = useState('');\n  const [dietQuality, setDietQuality] = useState('boa');\n  const [dietNotes, setDietNotes] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [workoutDone, setWorkoutDone] = useState(false);\n  const [workoutNotes, setWorkoutNotes] = useState('');\n\n  // Estado para armazenar os registros do usuário\n  const [records, setRecords] = useState([]);\n\n  // Estado para armazenar o usuário atual\n  const [currentUser, setCurrentUser] = useState(user);\n\n  // Estado para controlar a contagem de streak\n  const [streakCount, setStreakCount] = useState(0);\n\n  // Estado para controlar a visualização de seções\n  const [activeSection, setActiveSection] = useState('dashboard');\n\n  // Estado para controlar medalhas\n  const [medals, setMedals] = useState(defaultMedals);\n\n  // Estado para controlar celebrações\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [currentAchievement, setCurrentAchievement] = useState(null);\n\n  // Carregar registros do usuário ao montar o componente\n  useEffect(() => {\n    loadUserRecords();\n  }, []);\n\n  // Calcular streak quando os registros mudarem\n  useEffect(() => {\n    if (records.length > 0) {\n      const streak = calculateStreak(records);\n      setStreakCount(streak);\n    }\n  }, [records]);\n\n  // Função para carregar os registros do usuário do localStorage\n  const loadUserRecords = () => {\n    // Buscar usuários do localStorage\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Encontrar o usuário atual\n    const updatedUser = users.find(u => u.id === user.id);\n    if (updatedUser) {\n      setCurrentUser(updatedUser);\n      setRecords(updatedUser.records || []);\n\n      // Verificar e atualizar medalhas\n      updateMedals(updatedUser, updatedUser.records || []);\n    }\n  };\n\n  // Função para calcular streak (dias consecutivos)\n  const calculateStreak = records => {\n    if (records.length === 0) return 0;\n\n    // Verificar se há um registro para hoje\n    const today = new Date().setHours(0, 0, 0, 0);\n    const hasToday = records.some(record => {\n      const recordDate = new Date(record.date).setHours(0, 0, 0, 0);\n      return recordDate === today;\n    });\n\n    // Se não há registro hoje, começar contagem do zero\n    if (!hasToday) return 0;\n    let streak = 1;\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n\n    // Ordenar registros por data (mais recente primeiro)\n    const sortedRecords = [...records].sort((a, b) => new Date(b.date) - new Date(a.date));\n\n    // Verificar dias consecutivos\n    for (let i = 1; i < 100; i++) {\n      // Limite de 100 dias para evitar loop infinito\n      const prevDate = new Date(currentDate);\n      prevDate.setDate(prevDate.getDate() - 1);\n      prevDate.setHours(0, 0, 0, 0);\n      const hasPrevDay = sortedRecords.some(record => {\n        const recordDate = new Date(record.date).setHours(0, 0, 0, 0);\n        return recordDate === prevDate.getTime();\n      });\n      if (hasPrevDay) {\n        streak++;\n        currentDate = prevDate;\n      } else {\n        break;\n      }\n    }\n    return streak;\n  };\n\n  // Função para atualizar medalhas\n  const updateMedals = (user, records) => {\n    let updatedMedals = [...medals];\n    let newAchievements = [];\n\n    // Verificar medalha de primeiro registro\n    if (records.length > 0 && !medals.find(m => m.id === 'first_record').unlocked) {\n      updatedMedals = updatedMedals.map(medal => medal.id === 'first_record' ? {\n        ...medal,\n        unlocked: true\n      } : medal);\n      newAchievements.push({\n        id: 'first_record',\n        title: 'Primeiro Registro!',\n        description: 'Você fez seu primeiro registro diário. Continue assim!',\n        icon: '📝'\n      });\n    }\n\n    // Verificar medalha de perda de peso\n    if (records.length > 0) {\n      const initialWeight = parseFloat(user.initialWeight);\n      const latestWeight = parseFloat(records[0].weight);\n      const weightLoss = initialWeight - latestWeight;\n      if (weightLoss >= 1 && !medals.find(m => m.id === 'weight_loss_1').unlocked) {\n        updatedMedals = updatedMedals.map(medal => medal.id === 'weight_loss_1' ? {\n          ...medal,\n          unlocked: true\n        } : medal);\n        newAchievements.push({\n          id: 'weight_loss_1',\n          title: 'Primeiro Quilo!',\n          description: 'Você perdeu seu primeiro quilo. Parabéns pelo progresso!',\n          icon: '⚖️'\n        });\n      }\n      if (weightLoss >= 5 && !medals.find(m => m.id === 'weight_loss_5').unlocked) {\n        updatedMedals = updatedMedals.map(medal => medal.id === 'weight_loss_5' ? {\n          ...medal,\n          unlocked: true\n        } : medal);\n        newAchievements.push({\n          id: 'weight_loss_5',\n          title: 'Cinco Quilos!',\n          description: 'Você perdeu 5 quilos desde o início. Que conquista incrível!',\n          icon: '🏆'\n        });\n      }\n    }\n\n    // Verificar medalha de streak\n    if (streakCount >= 3 && !medals.find(m => m.id === 'streak_3').unlocked) {\n      updatedMedals = updatedMedals.map(medal => medal.id === 'streak_3' ? {\n        ...medal,\n        unlocked: true\n      } : medal);\n      newAchievements.push({\n        id: 'streak_3',\n        title: 'Sequência de 3 Dias!',\n        description: 'Você manteve registros por 3 dias consecutivos. Sua consistência é admirável!',\n        icon: '🔥'\n      });\n    }\n    if (streakCount >= 7 && !medals.find(m => m.id === 'streak_7').unlocked) {\n      updatedMedals = updatedMedals.map(medal => medal.id === 'streak_7' ? {\n        ...medal,\n        unlocked: true\n      } : medal);\n      newAchievements.push({\n        id: 'streak_7',\n        title: 'Semana Perfeita!',\n        description: 'Você manteve registros por 7 dias consecutivos. Uma semana inteira de dedicação!',\n        icon: '🌟'\n      });\n    }\n\n    // Atualizar estado das medalhas\n    setMedals(updatedMedals);\n\n    // Mostrar celebração para a primeira conquista nova (se houver)\n    if (newAchievements.length > 0) {\n      setCurrentAchievement(newAchievements[0]);\n      setShowCelebration(true);\n    }\n  };\n\n  // Função para adicionar um novo registro\n  const handleAddRecord = e => {\n    e.preventDefault();\n\n    // Validação básica\n    if (!sleepHours || !waterIntake || !currentWeight) {\n      alert('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n\n    // Criar novo registro\n    const newRecord = {\n      id: Date.now().toString(),\n      date: new Date().toISOString(),\n      sleepHours: parseFloat(sleepHours),\n      waterIntake: parseFloat(waterIntake),\n      dietQuality,\n      dietNotes,\n      weight: parseFloat(currentWeight),\n      workoutDone,\n      workoutNotes\n    };\n\n    // Buscar usuários do localStorage\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Encontrar e atualizar o usuário atual\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        // Adicionar novo registro ao início do array\n        const updatedRecords = [newRecord, ...(u.records || [])];\n        return {\n          ...u,\n          records: updatedRecords\n        };\n      }\n      return u;\n    });\n\n    // Salvar no localStorage\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n\n    // Atualizar estado local\n    loadUserRecords();\n\n    // Limpar formulário\n    setSleepHours('');\n    setWaterIntake('');\n    setDietQuality('boa');\n    setDietNotes('');\n    setCurrentWeight('');\n    setWorkoutDone(false);\n    setWorkoutNotes('');\n\n    // Mostrar mensagem de sucesso com animação\n    const successMessage = document.createElement('div');\n    successMessage.className = 'success-popup';\n    successMessage.textContent = 'Registro adicionado com sucesso!';\n    document.body.appendChild(successMessage);\n    setTimeout(() => {\n      successMessage.classList.add('show');\n    }, 100);\n    setTimeout(() => {\n      successMessage.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(successMessage);\n      }, 500);\n    }, 3000);\n  };\n\n  // Função para formatar data\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Calcular progresso de água (considerando 2L como meta)\n  const calculateWaterProgress = intake => {\n    const progress = intake / 2 * 100;\n    return Math.min(progress, 100); // Limitar a 100%\n  };\n\n  // Calcular variação de peso\n  const calculateWeightChange = () => {\n    var _records$;\n    if (!currentUser || !records || records.length === 0) return 0;\n    const initialWeight = parseFloat(currentUser.initialWeight);\n    const latestWeight = parseFloat(((_records$ = records[0]) === null || _records$ === void 0 ? void 0 : _records$.weight) || initialWeight);\n    return (latestWeight - initialWeight).toFixed(1);\n  };\n\n  // Mapear qualidade da dieta para texto\n  const getDietQualityText = quality => {\n    const qualities = {\n      'ruim': 'Ruim',\n      'regular': 'Regular',\n      'boa': 'Boa',\n      'excelente': 'Excelente'\n    };\n    return qualities[quality] || quality;\n  };\n\n  // Animações para elementos da página\n  const containerVariants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: {\n      y: 20,\n      opacity: 0\n    },\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        type: \"spring\",\n        stiffness: 100\n      }\n    }\n  };\n\n  // Preparar dados para os medidores avançados\n  const metersData = {\n    weight: {\n      current: records.length > 0 ? records[0].weight : currentUser.initialWeight,\n      initial: currentUser.initialWeight,\n      goal: currentUser.weightGoal || currentUser.initialWeight * 0.9,\n      // Meta padrão: 90% do peso inicial\n      unit: 'kg'\n    },\n    sleep: {\n      average: records.length > 0 ? records.reduce((sum, record) => sum + record.sleepHours, 0) / records.length : 7,\n      goal: 8,\n      unit: 'horas'\n    },\n    water: {\n      current: records.length > 0 ? records[0].waterIntake : 0,\n      goal: 2,\n      unit: 'L'\n    },\n    workout: {\n      completed: records.filter(r => r.workoutDone && new Date(r.date) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)).length,\n      goal: 5,\n      unit: 'treinos/semana'\n    }\n  };\n\n  // Renderizar seção ativa\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"dashboard-grid\",\n          variants: containerVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item grid-item-full\",\n            children: /*#__PURE__*/_jsxDEV(MotivationCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item\",\n            children: /*#__PURE__*/_jsxDEV(ProgressCard, {\n              title: \"Progresso de Peso\",\n              currentValue: metersData.weight.current,\n              initialValue: metersData.weight.initial,\n              goalValue: metersData.weight.goal,\n              unit: \"kg\",\n              icon: \"\\u2696\\uFE0F\",\n              color: \"orange\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item\",\n            children: /*#__PURE__*/_jsxDEV(ProgressCard, {\n              title: \"Consumo de \\xC1gua\",\n              currentValue: metersData.water.current,\n              initialValue: 0,\n              goalValue: metersData.water.goal,\n              unit: \"L\",\n              icon: \"\\uD83D\\uDCA7\",\n              color: \"blue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item\",\n            children: /*#__PURE__*/_jsxDEV(ProgressCard, {\n              title: \"Qualidade do Sono\",\n              currentValue: metersData.sleep.average,\n              initialValue: 0,\n              goalValue: metersData.sleep.goal,\n              unit: \"horas\",\n              icon: \"\\uD83D\\uDE34\",\n              color: \"purple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item\",\n            children: /*#__PURE__*/_jsxDEV(ProgressCard, {\n              title: \"Treinos Semanais\",\n              currentValue: metersData.workout.completed,\n              initialValue: 0,\n              goalValue: metersData.workout.goal,\n              unit: \"treinos\",\n              icon: \"\\uD83D\\uDCAA\",\n              color: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item grid-item-full\",\n            children: /*#__PURE__*/_jsxDEV(MedalsCard, {\n              medals: medals,\n              onUnlock: medal => {\n                setCurrentAchievement({\n                  id: medal.id,\n                  title: medal.name,\n                  description: medal.description,\n                  icon: medal.icon\n                });\n                setShowCelebration(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item grid-item-full\",\n            children: /*#__PURE__*/_jsxDEV(SuccessStoriesCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this);\n      case 'register':\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"register-container\",\n          variants: containerVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"register-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"register-title\",\n              children: \"Registrar Progresso Di\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"register-form\",\n              onSubmit: handleAddRecord,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"currentWeight\",\n                    children: \"Peso Atual (kg) *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"currentWeight\",\n                    className: \"futuristic-input\",\n                    value: currentWeight,\n                    onChange: e => setCurrentWeight(e.target.value),\n                    step: \"0.1\",\n                    min: \"0\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"sleepHours\",\n                    children: \"Horas de Sono *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"sleepHours\",\n                    className: \"futuristic-input\",\n                    value: sleepHours,\n                    onChange: e => setSleepHours(e.target.value),\n                    step: \"0.5\",\n                    min: \"0\",\n                    max: \"24\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"waterIntake\",\n                    children: \"Consumo de \\xC1gua (L) *\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    id: \"waterIntake\",\n                    className: \"futuristic-input\",\n                    value: waterIntake,\n                    onChange: e => setWaterIntake(e.target.value),\n                    step: \"0.1\",\n                    min: \"0\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"dietQuality\",\n                    children: \"Qualidade da Alimenta\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    id: \"dietQuality\",\n                    className: \"futuristic-input\",\n                    value: dietQuality,\n                    onChange: e => setDietQuality(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"ruim\",\n                      children: \"Ruim\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"regular\",\n                      children: \"Regular\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"boa\",\n                      children: \"Boa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"excelente\",\n                      children: \"Excelente\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 518,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"dietNotes\",\n                    children: \"Observa\\xE7\\xF5es sobre Alimenta\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"dietNotes\",\n                    className: \"futuristic-input\",\n                    value: dietNotes,\n                    onChange: e => setDietNotes(e.target.value),\n                    placeholder: \"O que voc\\xEA comeu hoje?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"checkbox-group\",\n                    children: /*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"workoutDone\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        id: \"workoutDone\",\n                        checked: workoutDone,\n                        onChange: e => setWorkoutDone(e.target.checked)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 538,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"checkbox-label\",\n                        children: \"Realizei atividade f\\xEDsica hoje\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 544,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 537,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"workoutNotes\",\n                    children: \"Detalhes do Treino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    id: \"workoutNotes\",\n                    className: \"futuristic-input\",\n                    value: workoutNotes,\n                    onChange: e => setWorkoutNotes(e.target.value),\n                    placeholder: \"Que exerc\\xEDcios voc\\xEA fez?\",\n                    disabled: !workoutDone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"register-button\",\n                children: \"Salvar Registro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this);\n      case 'history':\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"history-container\",\n          variants: containerVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"history-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"history-title\",\n              children: \"Hist\\xF3rico de Registros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), records.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-records\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Voc\\xEA ainda n\\xE3o tem registros. Comece a registrar seu progresso di\\xE1rio!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"records-list\",\n              children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"record-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"record-date\",\n                  children: formatDate(record.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"record-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"record-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-label\",\n                      children: \"Peso\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 591,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-value\",\n                      children: [record.weight, \" kg\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 592,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"record-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-label\",\n                      children: \"Sono\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 596,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-value\",\n                      children: [record.sleepHours, \" horas\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 597,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"record-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-label\",\n                      children: \"\\xC1gua\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-value\",\n                      children: [record.waterIntake, \" L\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 600,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"record-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-label\",\n                      children: \"Alimenta\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-value\",\n                      children: getDietQualityText(record.dietQuality)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 607,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"record-detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-label\",\n                      children: \"Treino\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 611,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"record-detail-value\",\n                      children: record.workoutDone ? 'Sim' : 'Não'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 612,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 23\n                }, this), (record.dietNotes || record.workoutNotes) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"record-notes\",\n                  children: [record.dietNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"note-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"note-label\",\n                      children: \"Notas de Alimenta\\xE7\\xE3o:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 620,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"note-text\",\n                      children: record.dietNotes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 619,\n                    columnNumber: 29\n                  }, this), record.workoutNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"note-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"note-label\",\n                      children: \"Notas de Treino:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"note-text\",\n                      children: record.workoutNotes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 628,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 25\n                }, this)]\n              }, record.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this);\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"success-container\",\n          variants: containerVariants,\n          initial: \"hidden\",\n          animate: \"visible\",\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            variants: itemVariants,\n            className: \"grid-item grid-item-full\",\n            children: /*#__PURE__*/_jsxDEV(SuccessStoriesCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Desafio\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gradient\",\n              children: \"Fitness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dashboard-user-name\",\n            children: [\"Ol\\xE1, \", currentUser.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logout-button\",\n            onClick: onLogout,\n            children: \"Sair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"dashboard-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `nav-item ${activeSection === 'dashboard' ? 'active' : ''}`,\n          onClick: () => setActiveSection('dashboard'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-icon\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-text\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `nav-item ${activeSection === 'register' ? 'active' : ''}`,\n          onClick: () => setActiveSection('register'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-icon\",\n            children: \"\\u270F\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-text\",\n            children: \"Registrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `nav-item ${activeSection === 'history' ? 'active' : ''}`,\n          onClick: () => setActiveSection('history'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-icon\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-text\",\n            children: \"Hist\\xF3rico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `nav-item ${activeSection === 'success' ? 'active' : ''}`,\n          onClick: () => setActiveSection('success'),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-icon\",\n            children: \"\\uD83C\\uDFC6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nav-text\",\n            children: \"Sucesso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: renderActiveSection()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 7\n    }, this), showCelebration && currentAchievement && /*#__PURE__*/_jsxDEV(CelebrationCard, {\n      achievement: currentAchievement,\n      onClose: () => setShowCelebration(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 661,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"6wR5u85H2Z7ZUcx8CbIQTi7Foz4=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","motion","ProgressCard","MedalsCard","defaultMedals","MotivationCard","SuccessStoriesCard","CelebrationCard","jsxDEV","_jsxDEV","DashboardPage","user","onLogout","_s","sleepHours","setSleepHours","waterIntake","setWaterIntake","dietQuality","setDietQuality","dietNotes","setDietNotes","currentWeight","setCurrentWeight","workoutDone","setWorkoutDone","workoutNotes","setWorkoutNotes","records","setRecords","currentUser","setCurrentUser","streakCount","setStreakCount","activeSection","setActiveSection","medals","setMedals","showCelebration","setShowCelebration","currentAchievement","setCurrentAchievement","loadUserRecords","length","streak","calculateStreak","users","JSON","parse","localStorage","getItem","updatedUser","find","u","id","updateMedals","today","Date","setHours","hasToday","some","record","recordDate","date","currentDate","sortedRecords","sort","a","b","i","prevDate","setDate","getDate","hasPrevDay","getTime","updatedMedals","newAchievements","m","unlocked","map","medal","push","title","description","icon","initialWeight","parseFloat","latestWeight","weight","weightLoss","handleAddRecord","e","preventDefault","alert","newRecord","now","toString","toISOString","updatedUsers","updatedRecords","setItem","stringify","successMessage","document","createElement","className","textContent","body","appendChild","setTimeout","classList","add","remove","removeChild","formatDate","dateString","toLocaleDateString","day","month","year","hour","minute","calculateWaterProgress","intake","progress","Math","min","calculateWeightChange","_records$","toFixed","getDietQualityText","quality","qualities","containerVariants","hidden","opacity","visible","transition","staggerChildren","delayChildren","itemVariants","y","type","stiffness","metersData","current","initial","goal","weightGoal","unit","sleep","average","reduce","sum","water","workout","completed","filter","r","renderActiveSection","div","variants","animate","children","fileName","_jsxFileName","lineNumber","columnNumber","currentValue","initialValue","goalValue","color","onUnlock","name","onSubmit","htmlFor","value","onChange","target","step","required","max","placeholder","checked","disabled","onClick","achievement","onClose","_c","$RefreshReg$"],"sources":["/Users/pablorodrigues/Downloads/PAGINA INTERATIVO - D90/PAGINA-INTERATIVA-90/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport ProgressCard from '../components/cards/ProgressCard';\nimport MedalsCard, { defaultMedals } from '../components/cards/MedalsCard';\nimport MotivationCard from '../components/cards/MotivationCard';\nimport SuccessStoriesCard from '../components/cards/SuccessStoriesCard';\nimport CelebrationCard from '../components/cards/CelebrationCard';\nimport '../styles/futuristic.css';\nimport '../styles/dashboard.css';\nimport '../styles/cards.css';\nimport '../styles/animations.css';\n\n// Componente principal do Dashboard\nconst DashboardPage = ({ user, onLogout }) => {\n  // Estados para os formulários de registro\n  const [sleepHours, setSleepHours] = useState('');\n  const [waterIntake, setWaterIntake] = useState('');\n  const [dietQuality, setDietQuality] = useState('boa');\n  const [dietNotes, setDietNotes] = useState('');\n  const [currentWeight, setCurrentWeight] = useState('');\n  const [workoutDone, setWorkoutDone] = useState(false);\n  const [workoutNotes, setWorkoutNotes] = useState('');\n  \n  // Estado para armazenar os registros do usuário\n  const [records, setRecords] = useState([]);\n  \n  // Estado para armazenar o usuário atual\n  const [currentUser, setCurrentUser] = useState(user);\n\n  // Estado para controlar a contagem de streak\n  const [streakCount, setStreakCount] = useState(0);\n  \n  // Estado para controlar a visualização de seções\n  const [activeSection, setActiveSection] = useState('dashboard');\n\n  // Estado para controlar medalhas\n  const [medals, setMedals] = useState(defaultMedals);\n\n  // Estado para controlar celebrações\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [currentAchievement, setCurrentAchievement] = useState(null);\n\n  // Carregar registros do usuário ao montar o componente\n  useEffect(() => {\n    loadUserRecords();\n  }, []);\n\n  // Calcular streak quando os registros mudarem\n  useEffect(() => {\n    if (records.length > 0) {\n      const streak = calculateStreak(records);\n      setStreakCount(streak);\n    }\n  }, [records]);\n\n  // Função para carregar os registros do usuário do localStorage\n  const loadUserRecords = () => {\n    // Buscar usuários do localStorage\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    \n    // Encontrar o usuário atual\n    const updatedUser = users.find(u => u.id === user.id);\n    \n    if (updatedUser) {\n      setCurrentUser(updatedUser);\n      setRecords(updatedUser.records || []);\n      \n      // Verificar e atualizar medalhas\n      updateMedals(updatedUser, updatedUser.records || []);\n    }\n  };\n\n  // Função para calcular streak (dias consecutivos)\n  const calculateStreak = (records) => {\n    if (records.length === 0) return 0;\n    \n    // Verificar se há um registro para hoje\n    const today = new Date().setHours(0, 0, 0, 0);\n    const hasToday = records.some(record => {\n      const recordDate = new Date(record.date).setHours(0, 0, 0, 0);\n      return recordDate === today;\n    });\n    \n    // Se não há registro hoje, começar contagem do zero\n    if (!hasToday) return 0;\n    \n    let streak = 1;\n    let currentDate = new Date();\n    currentDate.setHours(0, 0, 0, 0);\n    \n    // Ordenar registros por data (mais recente primeiro)\n    const sortedRecords = [...records].sort((a, b) => \n      new Date(b.date) - new Date(a.date)\n    );\n    \n    // Verificar dias consecutivos\n    for (let i = 1; i < 100; i++) { // Limite de 100 dias para evitar loop infinito\n      const prevDate = new Date(currentDate);\n      prevDate.setDate(prevDate.getDate() - 1);\n      prevDate.setHours(0, 0, 0, 0);\n      \n      const hasPrevDay = sortedRecords.some(record => {\n        const recordDate = new Date(record.date).setHours(0, 0, 0, 0);\n        return recordDate === prevDate.getTime();\n      });\n      \n      if (hasPrevDay) {\n        streak++;\n        currentDate = prevDate;\n      } else {\n        break;\n      }\n    }\n    \n    return streak;\n  };\n\n  // Função para atualizar medalhas\n  const updateMedals = (user, records) => {\n    let updatedMedals = [...medals];\n    let newAchievements = [];\n    \n    // Verificar medalha de primeiro registro\n    if (records.length > 0 && !medals.find(m => m.id === 'first_record').unlocked) {\n      updatedMedals = updatedMedals.map(medal => \n        medal.id === 'first_record' ? { ...medal, unlocked: true } : medal\n      );\n      newAchievements.push({\n        id: 'first_record',\n        title: 'Primeiro Registro!',\n        description: 'Você fez seu primeiro registro diário. Continue assim!',\n        icon: '📝'\n      });\n    }\n    \n    // Verificar medalha de perda de peso\n    if (records.length > 0) {\n      const initialWeight = parseFloat(user.initialWeight);\n      const latestWeight = parseFloat(records[0].weight);\n      const weightLoss = initialWeight - latestWeight;\n      \n      if (weightLoss >= 1 && !medals.find(m => m.id === 'weight_loss_1').unlocked) {\n        updatedMedals = updatedMedals.map(medal => \n          medal.id === 'weight_loss_1' ? { ...medal, unlocked: true } : medal\n        );\n        newAchievements.push({\n          id: 'weight_loss_1',\n          title: 'Primeiro Quilo!',\n          description: 'Você perdeu seu primeiro quilo. Parabéns pelo progresso!',\n          icon: '⚖️'\n        });\n      }\n      \n      if (weightLoss >= 5 && !medals.find(m => m.id === 'weight_loss_5').unlocked) {\n        updatedMedals = updatedMedals.map(medal => \n          medal.id === 'weight_loss_5' ? { ...medal, unlocked: true } : medal\n        );\n        newAchievements.push({\n          id: 'weight_loss_5',\n          title: 'Cinco Quilos!',\n          description: 'Você perdeu 5 quilos desde o início. Que conquista incrível!',\n          icon: '🏆'\n        });\n      }\n    }\n    \n    // Verificar medalha de streak\n    if (streakCount >= 3 && !medals.find(m => m.id === 'streak_3').unlocked) {\n      updatedMedals = updatedMedals.map(medal => \n        medal.id === 'streak_3' ? { ...medal, unlocked: true } : medal\n      );\n      newAchievements.push({\n        id: 'streak_3',\n        title: 'Sequência de 3 Dias!',\n        description: 'Você manteve registros por 3 dias consecutivos. Sua consistência é admirável!',\n        icon: '🔥'\n      });\n    }\n    \n    if (streakCount >= 7 && !medals.find(m => m.id === 'streak_7').unlocked) {\n      updatedMedals = updatedMedals.map(medal => \n        medal.id === 'streak_7' ? { ...medal, unlocked: true } : medal\n      );\n      newAchievements.push({\n        id: 'streak_7',\n        title: 'Semana Perfeita!',\n        description: 'Você manteve registros por 7 dias consecutivos. Uma semana inteira de dedicação!',\n        icon: '🌟'\n      });\n    }\n    \n    // Atualizar estado das medalhas\n    setMedals(updatedMedals);\n    \n    // Mostrar celebração para a primeira conquista nova (se houver)\n    if (newAchievements.length > 0) {\n      setCurrentAchievement(newAchievements[0]);\n      setShowCelebration(true);\n    }\n  };\n\n  // Função para adicionar um novo registro\n  const handleAddRecord = (e) => {\n    e.preventDefault();\n    \n    // Validação básica\n    if (!sleepHours || !waterIntake || !currentWeight) {\n      alert('Por favor, preencha todos os campos obrigatórios');\n      return;\n    }\n    \n    // Criar novo registro\n    const newRecord = {\n      id: Date.now().toString(),\n      date: new Date().toISOString(),\n      sleepHours: parseFloat(sleepHours),\n      waterIntake: parseFloat(waterIntake),\n      dietQuality,\n      dietNotes,\n      weight: parseFloat(currentWeight),\n      workoutDone,\n      workoutNotes\n    };\n    \n    // Buscar usuários do localStorage\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    \n    // Encontrar e atualizar o usuário atual\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        // Adicionar novo registro ao início do array\n        const updatedRecords = [newRecord, ...(u.records || [])];\n        return { ...u, records: updatedRecords };\n      }\n      return u;\n    });\n    \n    // Salvar no localStorage\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n    \n    // Atualizar estado local\n    loadUserRecords();\n    \n    // Limpar formulário\n    setSleepHours('');\n    setWaterIntake('');\n    setDietQuality('boa');\n    setDietNotes('');\n    setCurrentWeight('');\n    setWorkoutDone(false);\n    setWorkoutNotes('');\n    \n    // Mostrar mensagem de sucesso com animação\n    const successMessage = document.createElement('div');\n    successMessage.className = 'success-popup';\n    successMessage.textContent = 'Registro adicionado com sucesso!';\n    document.body.appendChild(successMessage);\n    \n    setTimeout(() => {\n      successMessage.classList.add('show');\n    }, 100);\n    \n    setTimeout(() => {\n      successMessage.classList.remove('show');\n      setTimeout(() => {\n        document.body.removeChild(successMessage);\n      }, 500);\n    }, 3000);\n  };\n\n  // Função para formatar data\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('pt-BR', { \n      day: '2-digit', \n      month: '2-digit', \n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Calcular progresso de água (considerando 2L como meta)\n  const calculateWaterProgress = (intake) => {\n    const progress = (intake / 2) * 100;\n    return Math.min(progress, 100); // Limitar a 100%\n  };\n\n  // Calcular variação de peso\n  const calculateWeightChange = () => {\n    if (!currentUser || !records || records.length === 0) return 0;\n    \n    const initialWeight = parseFloat(currentUser.initialWeight);\n    const latestWeight = parseFloat(records[0]?.weight || initialWeight);\n    \n    return (latestWeight - initialWeight).toFixed(1);\n  };\n\n  // Mapear qualidade da dieta para texto\n  const getDietQualityText = (quality) => {\n    const qualities = {\n      'ruim': 'Ruim',\n      'regular': 'Regular',\n      'boa': 'Boa',\n      'excelente': 'Excelente'\n    };\n    return qualities[quality] || quality;\n  };\n\n  // Animações para elementos da página\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { \n        staggerChildren: 0.1,\n        delayChildren: 0.2\n      }\n    }\n  };\n  \n  const itemVariants = {\n    hidden: { y: 20, opacity: 0 },\n    visible: { \n      y: 0, \n      opacity: 1,\n      transition: { type: \"spring\", stiffness: 100 }\n    }\n  };\n\n  // Preparar dados para os medidores avançados\n  const metersData = {\n    weight: {\n      current: records.length > 0 ? records[0].weight : currentUser.initialWeight,\n      initial: currentUser.initialWeight,\n      goal: currentUser.weightGoal || (currentUser.initialWeight * 0.9), // Meta padrão: 90% do peso inicial\n      unit: 'kg'\n    },\n    sleep: {\n      average: records.length > 0 \n        ? records.reduce((sum, record) => sum + record.sleepHours, 0) / records.length\n        : 7,\n      goal: 8,\n      unit: 'horas'\n    },\n    water: {\n      current: records.length > 0 ? records[0].waterIntake : 0,\n      goal: 2,\n      unit: 'L'\n    },\n    workout: {\n      completed: records.filter(r => r.workoutDone && new Date(r.date) > new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)).length,\n      goal: 5,\n      unit: 'treinos/semana'\n    }\n  };\n\n  // Renderizar seção ativa\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'dashboard':\n        return (\n          <motion.div \n            className=\"dashboard-grid\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            {/* Card de Motivação */}\n            <motion.div variants={itemVariants} className=\"grid-item grid-item-full\">\n              <MotivationCard />\n            </motion.div>\n            \n            {/* Card de Progresso de Peso */}\n            <motion.div variants={itemVariants} className=\"grid-item\">\n              <ProgressCard \n                title=\"Progresso de Peso\"\n                currentValue={metersData.weight.current}\n                initialValue={metersData.weight.initial}\n                goalValue={metersData.weight.goal}\n                unit=\"kg\"\n                icon=\"⚖️\"\n                color=\"orange\"\n              />\n            </motion.div>\n            \n            {/* Card de Progresso de Água */}\n            <motion.div variants={itemVariants} className=\"grid-item\">\n              <ProgressCard \n                title=\"Consumo de Água\"\n                currentValue={metersData.water.current}\n                initialValue={0}\n                goalValue={metersData.water.goal}\n                unit=\"L\"\n                icon=\"💧\"\n                color=\"blue\"\n              />\n            </motion.div>\n            \n            {/* Card de Progresso de Sono */}\n            <motion.div variants={itemVariants} className=\"grid-item\">\n              <ProgressCard \n                title=\"Qualidade do Sono\"\n                currentValue={metersData.sleep.average}\n                initialValue={0}\n                goalValue={metersData.sleep.goal}\n                unit=\"horas\"\n                icon=\"😴\"\n                color=\"purple\"\n              />\n            </motion.div>\n            \n            {/* Card de Progresso de Treinos */}\n            <motion.div variants={itemVariants} className=\"grid-item\">\n              <ProgressCard \n                title=\"Treinos Semanais\"\n                currentValue={metersData.workout.completed}\n                initialValue={0}\n                goalValue={metersData.workout.goal}\n                unit=\"treinos\"\n                icon=\"💪\"\n                color=\"green\"\n              />\n            </motion.div>\n            \n            {/* Card de Medalhas */}\n            <motion.div variants={itemVariants} className=\"grid-item grid-item-full\">\n              <MedalsCard \n                medals={medals}\n                onUnlock={(medal) => {\n                  setCurrentAchievement({\n                    id: medal.id,\n                    title: medal.name,\n                    description: medal.description,\n                    icon: medal.icon\n                  });\n                  setShowCelebration(true);\n                }}\n              />\n            </motion.div>\n            \n            {/* Card de Histórias de Sucesso */}\n            <motion.div variants={itemVariants} className=\"grid-item grid-item-full\">\n              <SuccessStoriesCard />\n            </motion.div>\n          </motion.div>\n        );\n        \n      case 'register':\n        return (\n          <motion.div \n            className=\"register-container\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <motion.div variants={itemVariants} className=\"register-card\">\n              <h2 className=\"register-title\">Registrar Progresso Diário</h2>\n              \n              <form className=\"register-form\" onSubmit={handleAddRecord}>\n                <div className=\"form-row\">\n                  <div className=\"input-group\">\n                    <label htmlFor=\"currentWeight\">Peso Atual (kg) *</label>\n                    <input\n                      type=\"number\"\n                      id=\"currentWeight\"\n                      className=\"futuristic-input\"\n                      value={currentWeight}\n                      onChange={(e) => setCurrentWeight(e.target.value)}\n                      step=\"0.1\"\n                      min=\"0\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"input-group\">\n                    <label htmlFor=\"sleepHours\">Horas de Sono *</label>\n                    <input\n                      type=\"number\"\n                      id=\"sleepHours\"\n                      className=\"futuristic-input\"\n                      value={sleepHours}\n                      onChange={(e) => setSleepHours(e.target.value)}\n                      step=\"0.5\"\n                      min=\"0\"\n                      max=\"24\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"input-group\">\n                    <label htmlFor=\"waterIntake\">Consumo de Água (L) *</label>\n                    <input\n                      type=\"number\"\n                      id=\"waterIntake\"\n                      className=\"futuristic-input\"\n                      value={waterIntake}\n                      onChange={(e) => setWaterIntake(e.target.value)}\n                      step=\"0.1\"\n                      min=\"0\"\n                      required\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"input-group\">\n                    <label htmlFor=\"dietQuality\">Qualidade da Alimentação</label>\n                    <select\n                      id=\"dietQuality\"\n                      className=\"futuristic-input\"\n                      value={dietQuality}\n                      onChange={(e) => setDietQuality(e.target.value)}\n                    >\n                      <option value=\"ruim\">Ruim</option>\n                      <option value=\"regular\">Regular</option>\n                      <option value=\"boa\">Boa</option>\n                      <option value=\"excelente\">Excelente</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"input-group\">\n                    <label htmlFor=\"dietNotes\">Observações sobre Alimentação</label>\n                    <textarea\n                      id=\"dietNotes\"\n                      className=\"futuristic-input\"\n                      value={dietNotes}\n                      onChange={(e) => setDietNotes(e.target.value)}\n                      placeholder=\"O que você comeu hoje?\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"form-row\">\n                  <div className=\"input-group\">\n                    <div className=\"checkbox-group\">\n                      <label htmlFor=\"workoutDone\">\n                        <input\n                          type=\"checkbox\"\n                          id=\"workoutDone\"\n                          checked={workoutDone}\n                          onChange={(e) => setWorkoutDone(e.target.checked)}\n                        />\n                        <span className=\"checkbox-label\">Realizei atividade física hoje</span>\n                      </label>\n                    </div>\n                  </div>\n                  \n                  <div className=\"input-group\">\n                    <label htmlFor=\"workoutNotes\">Detalhes do Treino</label>\n                    <textarea\n                      id=\"workoutNotes\"\n                      className=\"futuristic-input\"\n                      value={workoutNotes}\n                      onChange={(e) => setWorkoutNotes(e.target.value)}\n                      placeholder=\"Que exercícios você fez?\"\n                      disabled={!workoutDone}\n                    />\n                  </div>\n                </div>\n                \n                <button type=\"submit\" className=\"register-button\">Salvar Registro</button>\n              </form>\n            </motion.div>\n          </motion.div>\n        );\n        \n      case 'history':\n        return (\n          <motion.div \n            className=\"history-container\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <motion.div variants={itemVariants} className=\"history-card\">\n              <h2 className=\"history-title\">Histórico de Registros</h2>\n              \n              {records.length === 0 ? (\n                <div className=\"no-records\">\n                  <p>Você ainda não tem registros. Comece a registrar seu progresso diário!</p>\n                </div>\n              ) : (\n                <div className=\"records-list\">\n                  {records.map(record => (\n                    <div key={record.id} className=\"record-item\">\n                      <div className=\"record-date\">{formatDate(record.date)}</div>\n                      \n                      <div className=\"record-details\">\n                        <div className=\"record-detail\">\n                          <div className=\"record-detail-label\">Peso</div>\n                          <div className=\"record-detail-value\">{record.weight} kg</div>\n                        </div>\n                        \n                        <div className=\"record-detail\">\n                          <div className=\"record-detail-label\">Sono</div>\n                          <div className=\"record-detail-value\">{record.sleepHours} horas</div>\n                        </div>\n                        \n                        <div className=\"record-detail\">\n                          <div className=\"record-detail-label\">Água</div>\n                          <div className=\"record-detail-value\">{record.waterIntake} L</div>\n                        </div>\n                        \n                        <div className=\"record-detail\">\n                          <div className=\"record-detail-label\">Alimentação</div>\n                          <div className=\"record-detail-value\">{getDietQualityText(record.dietQuality)}</div>\n                        </div>\n                        \n                        <div className=\"record-detail\">\n                          <div className=\"record-detail-label\">Treino</div>\n                          <div className=\"record-detail-value\">{record.workoutDone ? 'Sim' : 'Não'}</div>\n                        </div>\n                      </div>\n                      \n                      {(record.dietNotes || record.workoutNotes) && (\n                        <div className=\"record-notes\">\n                          {record.dietNotes && (\n                            <div className=\"note-item\">\n                              <div className=\"note-label\">Notas de Alimentação:</div>\n                              <div className=\"note-text\">{record.dietNotes}</div>\n                            </div>\n                          )}\n                          \n                          {record.workoutNotes && (\n                            <div className=\"note-item\">\n                              <div className=\"note-label\">Notas de Treino:</div>\n                              <div className=\"note-text\">{record.workoutNotes}</div>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </motion.div>\n          </motion.div>\n        );\n        \n      case 'success':\n        return (\n          <motion.div \n            className=\"success-container\"\n            variants={containerVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n          >\n            <motion.div variants={itemVariants} className=\"grid-item grid-item-full\">\n              <SuccessStoriesCard />\n            </motion.div>\n          </motion.div>\n        );\n        \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"dashboard-page\">\n      {/* Header */}\n      <header className=\"dashboard-header\">\n        <div className=\"dashboard-header-content\">\n          <div className=\"dashboard-logo\">\n            <h1>Desafio<span className=\"text-gradient\">Fitness</span></h1>\n          </div>\n          \n          <div className=\"dashboard-user-info\">\n            <div className=\"dashboard-user-name\">Olá, {currentUser.name}</div>\n            <button className=\"logout-button\" onClick={onLogout}>Sair</button>\n          </div>\n        </div>\n      </header>\n      \n      {/* Navegação */}\n      <nav className=\"dashboard-nav\">\n        <div className=\"nav-container\">\n          <button \n            className={`nav-item ${activeSection === 'dashboard' ? 'active' : ''}`}\n            onClick={() => setActiveSection('dashboard')}\n          >\n            <span className=\"nav-icon\">📊</span>\n            <span className=\"nav-text\">Dashboard</span>\n          </button>\n          \n          <button \n            className={`nav-item ${activeSection === 'register' ? 'active' : ''}`}\n            onClick={() => setActiveSection('register')}\n          >\n            <span className=\"nav-icon\">✏️</span>\n            <span className=\"nav-text\">Registrar</span>\n          </button>\n          \n          <button \n            className={`nav-item ${activeSection === 'history' ? 'active' : ''}`}\n            onClick={() => setActiveSection('history')}\n          >\n            <span className=\"nav-icon\">📅</span>\n            <span className=\"nav-text\">Histórico</span>\n          </button>\n          \n          <button \n            className={`nav-item ${activeSection === 'success' ? 'active' : ''}`}\n            onClick={() => setActiveSection('success')}\n          >\n            <span className=\"nav-icon\">🏆</span>\n            <span className=\"nav-text\">Sucesso</span>\n          </button>\n        </div>\n      </nav>\n      \n      {/* Conteúdo principal */}\n      <main className=\"dashboard-content\">\n        {renderActiveSection()}\n      </main>\n      \n      {/* Celebração de conquistas */}\n      {showCelebration && currentAchievement && (\n        <CelebrationCard \n          achievement={currentAchievement}\n          onClose={() => setShowCelebration(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}